# vitte/Cargo.toml — racine du workspace

[workspace]
resolver = "2"
members = [
  # Crates existants
  "crates/vitte-ast",
  "crates/vitte-cli",
  "crates/vitte-compiler",
  "crates/vitte-core",
  "crates/vitte-dap",
  "crates/vitte-debugger",
  "crates/vitte-ir",
  "crates/vitte-lexer",
  "crates/vitte-lsp",
  "crates/vitte-parser",
  "crates/vitte-runtime",
  "crates/vitte-tools",
  "crates/vitte-vitbc",
  "crates/vitte-vm",
  "crates/vitte-wasm",

  # ➕ Nouveaux membres
  "std",          # ta stdlib (crate à la racine)
  "modules/vitte-modules",       # meta-crate modules
  "modules/vitte-modules/vitte-*", # sous-crates dans modules/
  "tests",        # crate d'intégration cross-crates
  "benchmarks",   # agrégateur Criterion
]
exclude = ["docs"]

default-members = [
  "crates/vitte-ast",
  "crates/vitte-cli",
  "crates/vitte-compiler",
  "crates/vitte-core",
  "crates/vitte-dap",
  "crates/vitte-debugger",
  "crates/vitte-ir",
  "crates/vitte-lexer",
  "crates/vitte-lsp",
  "crates/vitte-parser",
  "crates/vitte-runtime",
  "crates/vitte-tools",
  "crates/vitte-vitbc",
  "crates/vitte-vm",
  "crates/vitte-wasm",
  "std",
  "modules/vitte-modules",
  "modules/vitte-modules/vitte-*",
]

[workspace.package]
edition      = "2021"
version      = "0.1.0"
license      = "Apache-2.0"
repository   = "https://github.com/vitte-lang/vitte"
homepage     = "https://vitte-lang.github.io/vitte/"
readme       = "README.md"
rust-version = "1.82.0"

[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]
all = "warn"
pedantic = "warn"
nursery = "warn"
module_name_repetitions = "allow"
too_many_lines = "allow"
doc_markdown = "allow"

[workspace.dependencies]
# Base
serde                 = { version = "1", default-features = false, features = ["derive"] }
serde_json            = "1"
thiserror             = "1"
anyhow                = "1"
bitflags              = "2"
smallvec              = "1"
indexmap              = "2"
petgraph              = "0.6"

# CLI / DX
clap                  = { version = "4", features = ["derive"] }
clap_complete         = "4"
tracing               = { version = "0.1", features = ["attributes", "log", "release_max_level_info"] }
tracing-subscriber    = { version = "0.3", features = ["env-filter", "fmt", "ansi", "time"] }
owo-colors            = { version = "4", features = ["supports-colors"] }

# Logging
log                   = "0.4"
env_logger            = { version = "0.11", default-features = false, features = ["auto-color"] }

# Async / LSP / runtime
tokio                 = { version = "1", features = ["rt-multi-thread", "macros", "io-std", "net", "sync", "fs"] }
tower-lsp             = "0.20"
notify                = "6"

# Bytecode / I/O
byteorder             = "1"
crc32fast             = "1"
lz4_flex              = "0.11"
zstd                  = { version = "0.13", default-features = false }
memmap2               = "0.9"
bumpalo               = "3"

# Concurrence / perfs
rayon                 = "1"
crossbeam-channel     = "0.5"
parking_lot           = "0.12"
dashmap               = "5"

# WASM
wasm-bindgen          = "0.2"
wasm-bindgen-futures  = "0.4"
js-sys                = "0.3"
web-sys               = { version = "0.3", features = [
  "Window","Response","Request","RequestInit","RequestMode","Headers","Console","Performance"
] }

# Outils dev/test
pretty_assertions     = "1"
proptest              = "1"
insta                 = { version = "1", features = ["yaml"] }
tempfile              = "3"

# Build utils
dirs-next             = "2"

# Binary serialization
bincode               = { version = "1.3", default-features = false }
postcard              = { version = "1", default-features = false, features = ["alloc"] }

# Stdlib exposée
vitte-stdlib          = { path = "std", version = "0.1.0" }

[profile.dev]
opt-level = 0
debug = 1
incremental = true

[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 1
strip = "symbols"
debug = 0
