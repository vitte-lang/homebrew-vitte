[package]
name        = "vitte-lexer"
description = "Lexer/tokenizer du langage Vitte : UTF-8, spans, nombres, chaînes, commentaires."

version      = { workspace = true }
edition      = { workspace = true }
rust-version = { workspace = true }
license      = { workspace = true }
repository   = { workspace = true }
homepage     = { workspace = true }
readme       = { workspace = true }

keywords   = ["vitte", "lexer", "tokenizer", "compiler"]
categories = ["compilers", "development-tools"]

[lib]
name = "vitte_lexer"
path = "src/lib.rs"

[features]
# Par défaut on cible l'environnement standard.
default = ["std"]

# Drapeau std (aucune subdep forcée ici, c’est juste un tag homogène)
std = []

# Sérialisation des tokens/diagnostics
serde = ["dep:serde"]

# Messages d’erreur jolis (si tu exposes une Error)
diagnostics = ["dep:thiserror"]

# Traces via 'log'
trace = ["dep:log"]

# Impl accélérée (recherche de délimiteurs, whitespace…) via memchr
fast = ["dep:memchr"]

# Alternative via 'logos'
logos = ["dep:logos"]

[dependencies]
# Internes (chemins relatifs au dossier crates/)
vitte-core = { path = "../vitte-core", version = "0.1.0" }
vitte-ast  = { path = "../vitte-ast",  version = "0.1.0", optional = true }

# Externes (héritées du workspace)
serde     = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }
log       = { workspace = true, optional = true }

# Externes spécifiques
memchr    = { version = "2.7", optional = true }
logos     = { version = "0.15.1", optional = true }

[dev-dependencies]
pretty_assertions = { workspace = true }
proptest          = { workspace = true }
serde_json        = { workspace = true }

[package.metadata.docs.rs]
all-features        = false
features            = ["std", "serde", "fast"]
no-default-features = false
rustdoc-args        = ["--cfg", "docsrs"]

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
all                      = "warn"
pedantic                 = "warn"
nursery                  = "warn"
module_name_repetitions  = "allow"
too_many_lines           = "allow"
doc_markdown             = "allow"
