# rust-toolchain.toml — Vitte workspace (MSRV alignée sur .clippy.toml)

[toolchain]
# Épingle la version pour des builds reproductibles.
channel = "1.82.0"

# "minimal" = rustc + cargo + std (docs exclus) ; on ajoute ce qu’il faut via components.
profile = "minimal"

# Outils indispensables pour un repo sérieux.
components = [
  "rustfmt",
  "clippy",
  "rust-src",            # pour RLS/rust-analyzer, build cross, bindgen, etc.
  "llvm-tools-preview",  # pour cargo-bloat/cov, objdump/size…
  "rust-analyzer"        # si indisponible sur ta plate-forme, supprime cette ligne
]

# Cibles cross-compile prêtes à l’emploi (épure si besoin).
targets = [
  # Linux GNU / MUSL
  "x86_64-unknown-linux-gnu",
  "aarch64-unknown-linux-gnu",
  "x86_64-unknown-linux-musl",
  "aarch64-unknown-linux-musl",

  # macOS (Intel + Apple Silicon)
  "x86_64-apple-darwin",
  "aarch64-apple-darwin",

  # Windows MSVC (x64 + ARM64)
  "x86_64-pc-windows-msvc",
  "aarch64-pc-windows-msvc",

  # Web / WASI
  "wasm32-unknown-unknown",
  "wasm32-wasi",

  # RISC-V / ARM (serveurs low-power, SBC, rétrofits)
  "riscv64gc-unknown-linux-gnu",
  "arm-unknown-linux-gnueabihf",
  "armv7-unknown-linux-gnueabihf"
]
